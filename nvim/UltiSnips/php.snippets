priority -50

#= Basic declarations
#==================================================
snippet var "variable declaration"
$${1:name} = ${2:value};$0
endsnippet

snippet fun "function declaration"
function ${1:name}(${2:args}) {
	$1
}$0
endsnippet

#= Flow control
#==================================================
snippet if "if statement"
if (${1:true}) {
	$2
}$0
endsnippet

snippet ifel "if/else statement"
if (${1:true}) {
	$2
} else {
	$3
}$0
endsnippet

snippet foe "foreach loop"
foreach ($${1:array} as $${2:value}) {
	$3
}$0
endsnippet

snippet foek "foreach loop with key"
foreach ($${1:array} as $${2:key} => $${3:value}) {
	$4
}$0
endsnippet

snippet for "for loop"
for ($${1:i} = ${2:0}; $1 < ${3:$length}; $1++$4) {
	$5
}$0
endsnippet

snippet whi "while loop"
while (${1:true}) {
	$2
}$0
endsnippet

snippet dow "do/while loop"
do {
	$2
} while (${1:true});$0
endsnippet

#= OOP
#==================================================
snippet ns "namespace"
namespace ${1:name};$0
endsnippet

snippet cls "class declaration"
class ${1:Name}
{
	public function ${2:__construct}(${3:args})
	{
		$0
	}
}
endsnippet

snippet clse "extended class declaration"
class ${1:Name} extends ${2:Parent}
{
	public function ${3:__construct}(${4:args})
	{
		$5
	}$0
}
endsnippet

snippet prop "public property"
public $${1:name} = ${2:value};$0
endsnippet

snippet pprop "protected property"
protected $${1:name} = ${2:value};$0
endsnippet

snippet piprop "private property"
private $${1:name} = ${2:value};$0
endsnippet

snippet met "public method"
public function ${1:name}(${2:args})
{
	$3
}$0
endsnippet

snippet pmet "protected method"
protected function ${1:name}(${2:args})
{
	$3
}$0
endsnippet

snippet pimet "private method"
private function ${1:name}(${2:args})
{
	$3
}$0
endsnippet

snippet smet "public static method"
public static function ${1:name}(${2:args})
{
	$3
}$0
endsnippet

snippet psmet "protected static method"
protected static function ${1:name}(${2:args})
{
	$3
}$0
endsnippet

snippet pismet "private static method"
private static function ${1:name}(${2:args})
{
	$3
}$0
endsnippet
